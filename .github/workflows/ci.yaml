# Set the workflow name.
name: CI

# Execute the workflow on pushes and pull requests.
on: [push, pull_request]

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17'
      - run: docker version
      - run: go version
      - run: ./build.sh
      - uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: mutagen-ssh-wrapper.tar.gz
  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17'
      - run: go version
      - name: "Analyze version information and release status"
        id: analyze
        run: |
          # Determine whether or not this is a release build.
          RELEASE="${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}"
          # Determine version target information for Go. If this is a release,
          # then we'll use the tag, otherwise we'll use the raw commit identifier.
          if [ "${RELEASE}" = "true" ]; then
            TARGET="${GITHUB_REF#refs/tags/}"
          else
            TARGET="${GITHUB_SHA}"
          fi
          # Set outputs.
          echo ::set-output name=release::${RELEASE}
          echo ::set-output name=target::${TARGET}
    outputs:
      release: ${{ steps.analyze.outputs.release }}
      target: ${{ steps.analyze.outputs.target }}
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [linux, versioning]
    if: ${{ needs.versioning.outputs.release == 'true' }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: binaries
          path: .
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            mutagen-ssh-wrapper.tar.gz
